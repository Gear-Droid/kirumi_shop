# Generated by Django 4.0.4 on 2022-05-16 01:24

import datetime
from django.db import migrations, models
import django.db.models.deletion
import mainapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.GenericIPAddressField(unique=True, verbose_name='Owner ip')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created datetime')),
                ('total_products', models.PositiveIntegerField(default=0, verbose_name='Total products count')),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Total price')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('pub_date', models.DateField(default=datetime.datetime.today, verbose_name='Publication date')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('slug', models.SlugField(max_length=64, unique=True, verbose_name='Unique slug')),
                ('sort_order', models.PositiveIntegerField(unique=True, verbose_name='Sorting order')),
                ('description', models.TextField(max_length=128, verbose_name='Description')),
                ('image', models.ImageField(upload_to='collection_image/%Y/%m', verbose_name='Collection picture')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='First name')),
                ('last_name', models.CharField(max_length=128, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('address', models.CharField(max_length=1024, verbose_name='Address')),
                ('status', models.CharField(choices=[('NEW', 'Новый заказ'), ('IN PROGRESS', 'Заказ в обработке'), ('IN PROGRESS', 'Заказ в обработке'), ('IS READY', 'Заказ готов'), ('COMPLETED', 'Заказ выполнен')], default='NEW', max_length=100, verbose_name='Order status')),
                ('buying_type', models.CharField(choices=[('SELF', 'Самовывоз'), ('DELIVERY', 'Доставка')], default='DELIVERY', max_length=100, verbose_name='Тип заказа')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий к заказу')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата создания заказа')),
                ('order_date', models.DateField(default=datetime.datetime.today, verbose_name='Дата полученя заказа')),
            ],
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('pub_date', models.DateField(default=datetime.datetime.today, verbose_name='Publication date')),
                ('sort_order', models.PositiveIntegerField(unique=True, verbose_name='Sorting order')),
                ('promocode', models.CharField(max_length=16, unique=True, verbose_name='Promocode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('pub_date', models.DateField(default=datetime.datetime.today, verbose_name='Publication date')),
                ('sort_order', models.PositiveIntegerField(unique=True, verbose_name='Sorting order')),
                ('size', models.CharField(max_length=64, unique=True, verbose_name='Size')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('pub_date', models.DateField(default=datetime.datetime.today, verbose_name='Publication date')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('name_ru', models.CharField(max_length=64, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=64, null=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=64, unique=True, verbose_name='Unique slug')),
                ('description', models.TextField(max_length=128, verbose_name='Description')),
                ('description_ru', models.TextField(max_length=128, null=True, verbose_name='Description')),
                ('description_en', models.TextField(max_length=128, null=True, verbose_name='Description')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='mainapp.collection', verbose_name='Collection')),
                ('sizes', models.ManyToManyField(default=mainapp.models.Product.allSizes, to='mainapp.size', verbose_name='Sizes')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ColoredProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('pub_date', models.DateField(default=datetime.datetime.today, verbose_name='Publication date')),
                ('slug', models.SlugField(max_length=64, verbose_name='Unique slug')),
                ('sort_order', models.PositiveIntegerField(verbose_name='Sorting order')),
                ('name', models.CharField(max_length=64, verbose_name='Color name')),
                ('color_hex_code', models.CharField(max_length=6, verbose_name='Color hex code (after #)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Actual price')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Old price')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='mainapp.product', verbose_name='Basic product')),
            ],
            options={
                'unique_together': {('product', 'sort_order'), ('product', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=1)),
                ('subtotal_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Subtotal price')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.cart', verbose_name='Cart')),
                ('colored_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_products', to='mainapp.coloredproduct', verbose_name='Colored product')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_products', to='mainapp.size', verbose_name='Размер')),
            ],
            options={
                'unique_together': {('cart', 'colored_product', 'size')},
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='colored_products',
            field=models.ManyToManyField(through='mainapp.CartProduct', to='mainapp.coloredproduct'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('pub_date', models.DateField(default=datetime.datetime.today, verbose_name='Publication date')),
                ('sort_order', models.PositiveIntegerField(verbose_name='Sorting order')),
                ('image', models.ImageField(upload_to='product_images/%Y/%m', verbose_name='Product picture')),
                ('description', models.CharField(max_length=190, unique=True, verbose_name='Description')),
                ('product_color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mainapp.coloredproduct', verbose_name='Product color')),
            ],
            options={
                'ordering': ['-sort_order'],
                'unique_together': {('product_color', 'sort_order')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='cart',
            unique_together={('owner', 'created')},
        ),
    ]
